{"abi":[{"type":"function","name":"borrow","inputs":[{"name":"amount","type":"uint256","internalType":"uint256"},{"name":"receiver","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"cash","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"dToken","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"debtOf","inputs":[{"name":"account","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"debtOfExact","inputs":[{"name":"account","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"flashLoan","inputs":[{"name":"amount","type":"uint256","internalType":"uint256"},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"interestAccumulator","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"interestRate","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"pullDebt","inputs":[{"name":"amount","type":"uint256","internalType":"uint256"},{"name":"from","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"repay","inputs":[{"name":"amount","type":"uint256","internalType":"uint256"},{"name":"receiver","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"repayWithShares","inputs":[{"name":"amount","type":"uint256","internalType":"uint256"},{"name":"receiver","type":"address","internalType":"address"}],"outputs":[{"name":"shares","type":"uint256","internalType":"uint256"},{"name":"debt","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"totalBorrows","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"totalBorrowsExact","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"touch","inputs":[],"outputs":[],"stateMutability":"nonpayable"}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"borrow(uint256,address)":"4b3fd148","cash()":"961be391","dToken()":"d9d7858a","debtOf(address)":"d283e75f","debtOfExact(address)":"ab49b7f1","flashLoan(uint256,bytes)":"5296a431","interestAccumulator()":"087a6007","interestRate()":"7c3a00fd","pullDebt(uint256,address)":"aebde56b","repay(uint256,address)":"acb70815","repayWithShares(uint256,address)":"a9c8eb7e","totalBorrows()":"47bd3718","totalBorrowsExact()":"e388be7b","touch()":"a55526db"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"borrow\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cash\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"dToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"debtOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"debtOfExact\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"flashLoan\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"interestAccumulator\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"interestRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"}],\"name\":\"pullDebt\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"repay\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"repayWithShares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"debt\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalBorrows\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalBorrowsExact\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"touch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"borrow(uint256,address)\":{\"params\":{\"amount\":\"Amount of assets to borrow (use max uint256 for all available tokens)\",\"receiver\":\"Account receiving the borrowed tokens\"},\"returns\":{\"_0\":\"Amount of assets borrowed\"}},\"cash()\":{\"returns\":{\"_0\":\"The amount of assets the vault tracks as current direct holdings\"}},\"dToken()\":{\"returns\":{\"_0\":\"The address of the DToken\"}},\"debtOf(address)\":{\"params\":{\"account\":\"Address to query\"},\"returns\":{\"_0\":\"The debt of the account in asset units\"}},\"debtOfExact(address)\":{\"params\":{\"account\":\"Address to query\"},\"returns\":{\"_0\":\"The debt of the account in internal precision\"}},\"flashLoan(uint256,bytes)\":{\"params\":{\"amount\":\"In asset units\",\"data\":\"Passed through to the onFlashLoan() callback, so contracts don't need to store transient data in storage\"}},\"interestAccumulator()\":{\"returns\":{\"_0\":\"An opaque accumulator that increases as interest is accrued\"}},\"interestRate()\":{\"returns\":{\"_0\":\"The interest rate in yield-per-second, scaled by 10**27\"}},\"pullDebt(uint256,address)\":{\"details\":\"Due to internal debt precision accounting, the liability reported on either or both accounts after calling `pullDebt` may not match the `amount` requested precisely\",\"params\":{\"amount\":\"Amount of debt in asset units (use max uint256 for all the account's debt)\",\"from\":\"Account to pull the debt from\"}},\"repay(uint256,address)\":{\"params\":{\"amount\":\"Amount of debt to repay in assets (use max uint256 for full debt)\",\"receiver\":\"Account holding the debt to be repaid\"},\"returns\":{\"_0\":\"Amount of assets repaid\"}},\"repayWithShares(uint256,address)\":{\"details\":\"Equivalent to withdrawing and repaying, but no assets are needed to be present in the vaultContrary to a regular `repay`, if account is unhealthy, the repay amount must bring the account back to health, or the operation will revert during account status check\",\"params\":{\"amount\":\"In asset units (use max uint256 to repay the debt in full or up to the available deposit)\",\"receiver\":\"Account to remove debt from by burning sender's shares\"},\"returns\":{\"debt\":\"Amount of debt removed in assets\",\"shares\":\"Amount of shares burned\"}},\"totalBorrows()\":{\"returns\":{\"_0\":\"The total borrows in asset units\"}},\"totalBorrowsExact()\":{\"returns\":{\"_0\":\"The total borrows in internal debt precision\"}}},\"title\":\"IBorrowing\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"borrow(uint256,address)\":{\"notice\":\"Transfer underlying tokens from the vault to the sender, and increase sender's debt\"},\"cash()\":{\"notice\":\"Balance of vault assets as tracked by deposits/withdrawals and borrows/repays\"},\"dToken()\":{\"notice\":\"Returns an address of the sidecar DToken\"},\"debtOf(address)\":{\"notice\":\"Debt owed by a particular account, in underlying units\"},\"debtOfExact(address)\":{\"notice\":\"Debt owed by a particular account, in underlying units scaled up by shifting INTERNAL_DEBT_PRECISION_SHIFT bits\"},\"flashLoan(uint256,bytes)\":{\"notice\":\"Request a flash-loan. A onFlashLoan() callback in msg.sender will be invoked, which must repay the loan to the main Euler address prior to returning.\"},\"interestAccumulator()\":{\"notice\":\"Retrieves the current interest rate accumulator for an asset\"},\"interestRate()\":{\"notice\":\"Retrieves the current interest rate for an asset\"},\"pullDebt(uint256,address)\":{\"notice\":\"Take over debt from another account\"},\"repay(uint256,address)\":{\"notice\":\"Transfer underlying tokens from the sender to the vault, and decrease receiver's debt\"},\"repayWithShares(uint256,address)\":{\"notice\":\"Pay off liability with shares (\\\"self-repay\\\")\"},\"totalBorrows()\":{\"notice\":\"Sum of all outstanding debts, in underlying units (increases as interest is accrued)\"},\"totalBorrowsExact()\":{\"notice\":\"Sum of all outstanding debts, in underlying units scaled up by shifting INTERNAL_DEBT_PRECISION_SHIFT bits\"},\"touch()\":{\"notice\":\"Updates interest accumulator and totalBorrows, credits reserves, re-targets interest rate, and logs vault status\"}},\"notice\":\"Interface of the EVault's Borrowing module\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/euler-vault-kit/src/EVault/IEVault.sol\":\"IBorrowing\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@uniswap/v4-core/=lib/v4-periphery/lib/v4-core/\",\":ds-test/=lib/ethereum-vault-connector/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":ethereum-vault-connector/=lib/ethereum-vault-connector/src/\",\":euler-vault-kit/=lib/euler-vault-kit/\",\":evc/=lib/ethereum-vault-connector/src/\",\":evk-test/=lib/euler-vault-kit/test/\",\":evk/=lib/euler-vault-kit/src/\",\":forge-gas-snapshot/=lib/euler-vault-kit/lib/permit2/lib/forge-gas-snapshot/src/\",\":forge-std/=lib/forge-std/src/\",\":halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\",\":openzeppelin/=lib/ethereum-vault-connector/lib/openzeppelin-contracts/contracts/\",\":permit2/=lib/euler-vault-kit/lib/permit2/\",\":solmate/=lib/v4-periphery/lib/v4-core/lib/solmate/src/\"]},\"sources\":{\"lib/ethereum-vault-connector/src/interfaces/IVault.sol\":{\"keccak256\":\"0xb04fe66deccf8baa3e5c850f2ecf32e948393d7a42e78b59b037141b205edf42\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://11acaad66e9a42deec1f9328abe9f2662bfb109568baa20a79317ae707b94016\",\"dweb:/ipfs/QmQbAtvrk9cqXJJZgMRjdxrMDXiZPz37m6PGZYEpbtN8to\"]},\"lib/euler-vault-kit/src/EVault/IEVault.sol\":{\"keccak256\":\"0x1e41f0fe57683c65b27afa6b725ee2c68128b540f682bba93e2dc135522ac6b3\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://86bb1872eb9073214b853663fb136157bea709bbcf626bb0a2bb2748a43f941d\",\"dweb:/ipfs/QmSWQPjHBBahLM3AsoVjHHYEBiBj8WbkQqCQLPNUJVMX1k\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.27+commit.40a35a09"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"address","name":"receiver","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"borrow","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"cash","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"dToken","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"stateMutability":"view","type":"function","name":"debtOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"stateMutability":"view","type":"function","name":"debtOfExact","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"flashLoan"},{"inputs":[],"stateMutability":"view","type":"function","name":"interestAccumulator","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"interestRate","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"address","name":"from","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"pullDebt"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"address","name":"receiver","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"repay","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"address","name":"receiver","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"repayWithShares","outputs":[{"internalType":"uint256","name":"shares","type":"uint256"},{"internalType":"uint256","name":"debt","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"totalBorrows","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"totalBorrowsExact","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"touch"}],"devdoc":{"kind":"dev","methods":{"borrow(uint256,address)":{"params":{"amount":"Amount of assets to borrow (use max uint256 for all available tokens)","receiver":"Account receiving the borrowed tokens"},"returns":{"_0":"Amount of assets borrowed"}},"cash()":{"returns":{"_0":"The amount of assets the vault tracks as current direct holdings"}},"dToken()":{"returns":{"_0":"The address of the DToken"}},"debtOf(address)":{"params":{"account":"Address to query"},"returns":{"_0":"The debt of the account in asset units"}},"debtOfExact(address)":{"params":{"account":"Address to query"},"returns":{"_0":"The debt of the account in internal precision"}},"flashLoan(uint256,bytes)":{"params":{"amount":"In asset units","data":"Passed through to the onFlashLoan() callback, so contracts don't need to store transient data in storage"}},"interestAccumulator()":{"returns":{"_0":"An opaque accumulator that increases as interest is accrued"}},"interestRate()":{"returns":{"_0":"The interest rate in yield-per-second, scaled by 10**27"}},"pullDebt(uint256,address)":{"details":"Due to internal debt precision accounting, the liability reported on either or both accounts after calling `pullDebt` may not match the `amount` requested precisely","params":{"amount":"Amount of debt in asset units (use max uint256 for all the account's debt)","from":"Account to pull the debt from"}},"repay(uint256,address)":{"params":{"amount":"Amount of debt to repay in assets (use max uint256 for full debt)","receiver":"Account holding the debt to be repaid"},"returns":{"_0":"Amount of assets repaid"}},"repayWithShares(uint256,address)":{"details":"Equivalent to withdrawing and repaying, but no assets are needed to be present in the vaultContrary to a regular `repay`, if account is unhealthy, the repay amount must bring the account back to health, or the operation will revert during account status check","params":{"amount":"In asset units (use max uint256 to repay the debt in full or up to the available deposit)","receiver":"Account to remove debt from by burning sender's shares"},"returns":{"debt":"Amount of debt removed in assets","shares":"Amount of shares burned"}},"totalBorrows()":{"returns":{"_0":"The total borrows in asset units"}},"totalBorrowsExact()":{"returns":{"_0":"The total borrows in internal debt precision"}}},"version":1},"userdoc":{"kind":"user","methods":{"borrow(uint256,address)":{"notice":"Transfer underlying tokens from the vault to the sender, and increase sender's debt"},"cash()":{"notice":"Balance of vault assets as tracked by deposits/withdrawals and borrows/repays"},"dToken()":{"notice":"Returns an address of the sidecar DToken"},"debtOf(address)":{"notice":"Debt owed by a particular account, in underlying units"},"debtOfExact(address)":{"notice":"Debt owed by a particular account, in underlying units scaled up by shifting INTERNAL_DEBT_PRECISION_SHIFT bits"},"flashLoan(uint256,bytes)":{"notice":"Request a flash-loan. A onFlashLoan() callback in msg.sender will be invoked, which must repay the loan to the main Euler address prior to returning."},"interestAccumulator()":{"notice":"Retrieves the current interest rate accumulator for an asset"},"interestRate()":{"notice":"Retrieves the current interest rate for an asset"},"pullDebt(uint256,address)":{"notice":"Take over debt from another account"},"repay(uint256,address)":{"notice":"Transfer underlying tokens from the sender to the vault, and decrease receiver's debt"},"repayWithShares(uint256,address)":{"notice":"Pay off liability with shares (\"self-repay\")"},"totalBorrows()":{"notice":"Sum of all outstanding debts, in underlying units (increases as interest is accrued)"},"totalBorrowsExact()":{"notice":"Sum of all outstanding debts, in underlying units scaled up by shifting INTERNAL_DEBT_PRECISION_SHIFT bits"},"touch()":{"notice":"Updates interest accumulator and totalBorrows, credits reserves, re-targets interest rate, and logs vault status"}},"version":1}},"settings":{"remappings":["@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","@uniswap/v4-core/=lib/v4-periphery/lib/v4-core/","ds-test/=lib/ethereum-vault-connector/lib/forge-std/lib/ds-test/src/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","ethereum-vault-connector/=lib/ethereum-vault-connector/src/","euler-vault-kit/=lib/euler-vault-kit/","evc/=lib/ethereum-vault-connector/src/","evk-test/=lib/euler-vault-kit/test/","evk/=lib/euler-vault-kit/src/","forge-gas-snapshot/=lib/euler-vault-kit/lib/permit2/lib/forge-gas-snapshot/src/","forge-std/=lib/forge-std/src/","halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/","openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/","openzeppelin/=lib/ethereum-vault-connector/lib/openzeppelin-contracts/contracts/","permit2/=lib/euler-vault-kit/lib/permit2/","solmate/=lib/v4-periphery/lib/v4-core/lib/solmate/src/"],"optimizer":{"enabled":false,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"lib/euler-vault-kit/src/EVault/IEVault.sol":"IBorrowing"},"evmVersion":"prague","libraries":{}},"sources":{"lib/ethereum-vault-connector/src/interfaces/IVault.sol":{"keccak256":"0xb04fe66deccf8baa3e5c850f2ecf32e948393d7a42e78b59b037141b205edf42","urls":["bzz-raw://11acaad66e9a42deec1f9328abe9f2662bfb109568baa20a79317ae707b94016","dweb:/ipfs/QmQbAtvrk9cqXJJZgMRjdxrMDXiZPz37m6PGZYEpbtN8to"],"license":"GPL-2.0-or-later"},"lib/euler-vault-kit/src/EVault/IEVault.sol":{"keccak256":"0x1e41f0fe57683c65b27afa6b725ee2c68128b540f682bba93e2dc135522ac6b3","urls":["bzz-raw://86bb1872eb9073214b853663fb136157bea709bbcf626bb0a2bb2748a43f941d","dweb:/ipfs/QmSWQPjHBBahLM3AsoVjHHYEBiBj8WbkQqCQLPNUJVMX1k"],"license":"GPL-2.0-or-later"}},"version":1},"id":2}