{"abi":[{"type":"function","name":"eulerSwapCall","inputs":[{"name":"sender","type":"address","internalType":"address"},{"name":"amount0","type":"uint256","internalType":"uint256"},{"name":"amount1","type":"uint256","internalType":"uint256"},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"eulerSwapCall(address,uint256,uint256,bytes)":"8f536f3e"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"eulerSwapCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"eulerSwapCall(address,uint256,uint256,bytes)\":{\"details\":\"This callback mechanism is designed to be as similar as possible to Uniswap2.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"eulerSwapCall(address,uint256,uint256,bytes)\":{\"notice\":\"If non-empty data is provided to `swap()`, then this callback function is invoked on the `to` address, allowing flash-swaps (withdrawing output before sending input.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/interfaces/IEulerSwapCallee.sol\":\"IEulerSwapCallee\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@uniswap/v4-core/=lib/v4-periphery/lib/v4-core/\",\":ds-test/=lib/ethereum-vault-connector/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":ethereum-vault-connector/=lib/ethereum-vault-connector/src/\",\":euler-vault-kit/=lib/euler-vault-kit/\",\":evc/=lib/ethereum-vault-connector/src/\",\":evk-test/=lib/euler-vault-kit/test/\",\":evk/=lib/euler-vault-kit/src/\",\":forge-gas-snapshot/=lib/euler-vault-kit/lib/permit2/lib/forge-gas-snapshot/src/\",\":forge-std/=lib/forge-std/src/\",\":halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\",\":openzeppelin/=lib/ethereum-vault-connector/lib/openzeppelin-contracts/contracts/\",\":permit2/=lib/euler-vault-kit/lib/permit2/\",\":solmate/=lib/v4-periphery/lib/v4-core/lib/solmate/src/\"]},\"sources\":{\"src/interfaces/IEulerSwapCallee.sol\":{\"keccak256\":\"0x381ae1f159d381d9a9050eb9440254b8377a90abe9f5983a63a2e53862f00754\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://629c3f8f5565e2753982b96003434ba37cb0eaa2d8d73a8f302684925e14333c\",\"dweb:/ipfs/QmPBBg4tfmuphbA8snks1BMtVi2tJidhqZ67zJKnf7GuGw\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.27+commit.40a35a09"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"amount0","type":"uint256"},{"internalType":"uint256","name":"amount1","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"eulerSwapCall"}],"devdoc":{"kind":"dev","methods":{"eulerSwapCall(address,uint256,uint256,bytes)":{"details":"This callback mechanism is designed to be as similar as possible to Uniswap2."}},"version":1},"userdoc":{"kind":"user","methods":{"eulerSwapCall(address,uint256,uint256,bytes)":{"notice":"If non-empty data is provided to `swap()`, then this callback function is invoked on the `to` address, allowing flash-swaps (withdrawing output before sending input."}},"version":1}},"settings":{"remappings":["@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","@uniswap/v4-core/=lib/v4-periphery/lib/v4-core/","ds-test/=lib/ethereum-vault-connector/lib/forge-std/lib/ds-test/src/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","ethereum-vault-connector/=lib/ethereum-vault-connector/src/","euler-vault-kit/=lib/euler-vault-kit/","evc/=lib/ethereum-vault-connector/src/","evk-test/=lib/euler-vault-kit/test/","evk/=lib/euler-vault-kit/src/","forge-gas-snapshot/=lib/euler-vault-kit/lib/permit2/lib/forge-gas-snapshot/src/","forge-std/=lib/forge-std/src/","halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/","openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/","openzeppelin/=lib/ethereum-vault-connector/lib/openzeppelin-contracts/contracts/","permit2/=lib/euler-vault-kit/lib/permit2/","solmate/=lib/v4-periphery/lib/v4-core/lib/solmate/src/"],"optimizer":{"enabled":false,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"src/interfaces/IEulerSwapCallee.sol":"IEulerSwapCallee"},"evmVersion":"prague","libraries":{}},"sources":{"src/interfaces/IEulerSwapCallee.sol":{"keccak256":"0x381ae1f159d381d9a9050eb9440254b8377a90abe9f5983a63a2e53862f00754","urls":["bzz-raw://629c3f8f5565e2753982b96003434ba37cb0eaa2d8d73a8f302684925e14333c","dweb:/ipfs/QmPBBg4tfmuphbA8snks1BMtVi2tJidhqZ67zJKnf7GuGw"],"license":"MIT"}},"version":1},"id":43}